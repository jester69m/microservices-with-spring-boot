version: '3.8'
services:
  db1:
    image: mysql
    container_name: user-service-db
    restart: always
    environment:
      MYSQL_DATABASE: 'userservice'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '8000:3306'
    networks:
      - blogapi-network
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - ./data:/docker-entrypoint-initdb.d
  db2:
    image: mysql
    container_name: album-service-db
    restart: always
    environment:
      MYSQL_DATABASE: 'albumservice'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '8001:3306'
    networks:
      - blogapi-network
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - ./data:/docker-entrypoint-initdb.d
  db3:
    image: mysql
    container_name: post-service-db
    restart: always
    environment:
      MYSQL_DATABASE: 'postservice'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '8002:3306'
    networks:
      - blogapi-network
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - ./data:/docker-entrypoint-initdb.d
#  application:
#    container_name: blogapi-application
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    networks:
#      - blogapi-network
#    depends_on:
#      - "db"
networks:
  blogapi-network:
    name: blogapi-network
    driver: bridge
